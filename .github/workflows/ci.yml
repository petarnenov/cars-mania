name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "22"
          cache: "npm"
          cache-dependency-path: |
            backend/package-lock.json
            frontend/package-lock.json

      - name: Install backend deps
        working-directory: backend
        run: npm ci

      - name: Type-check backend
        working-directory: backend
        run: npm run build

      - name: Install frontend deps
        working-directory: frontend
        run: npm ci

      - name: Lint frontend
        working-directory: frontend
        run: npm run lint

      - name: Unit tests (frontend)
        working-directory: frontend
        run: npm run test:run

      - name: Coverage (frontend)
        working-directory: frontend
        run: npm run test:cov

      - name: Upload coverage artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: frontend-coverage
          path: frontend/coverage
          if-no-files-found: ignore

      - name: Install Playwright browsers
        working-directory: frontend
        run: npx playwright install --with-deps

      - name: E2E tests (frontend)
        working-directory: frontend
        env:
          HEADLESS: "true"
        run: npm run e2e

      - name: Upload Playwright report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: frontend/playwright-report
          if-no-files-found: ignore

  docker-build:
    runs-on: ubuntu-latest
    needs: build-and-test
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build backend image
        uses: docker/build-push-action@v6
        with:
          context: ./backend
          push: false
          tags: cars-mania-backend:ci

      - name: Build frontend image
        uses: docker/build-push-action@v6
        with:
          context: ./frontend
          push: false
          tags: cars-mania-frontend:ci

      - name: Docker Compose up (smoke and e2e)
        run: |
          docker compose up -d --build
          # wait for services
          for i in {1..60}; do
            if curl -fsS http://localhost:3001/health >/dev/null; then echo backend up; break; fi; sleep 1; done
          # run playwright against dockerized site
          cd frontend
          E2E_DOCKER=1 E2E_BASE_URL=http://localhost:5173 npm run e2e
          cd ..
          docker compose logs backend | tail -n 200 || true
        env:
          JWT_ACCESS_SECRET: test_access_secret
          JWT_REFRESH_SECRET: test_refresh_secret
